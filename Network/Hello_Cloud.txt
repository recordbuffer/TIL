> 클라우드 Cloud : 클라우드 컴퓨팅 서비스
네트워크를 이용해 어떤 자원(통신망, 서버, 저장 장치, 애플리케이션)을 소유하는 게 아니라 필요할 때만 이용하고 사용한 만큼의 비용을 지불하는 IT 자원 활용 방식 

온프레미스 : 기업 자체 내 시스템을 보유하고 운영하고 관리하던 방식

클라우드 장점 
① 합리적인 비용 (경제성)
② 서비스 확장성
③ 유연한 관리
④ 빠른 구축 속도

클라우드 단점
① 보안 위험성
 

클라우드 컴퓨팅 핵심 기술
- 클러스터링 : LAN으로 연결된 여러 컴퓨터들을 하나의 컴퓨터처럼 작동하는 기술
- 그리드 컴퓨팅 : 병렬 분산 시스템의 종류, WAN으로 연결된 다른 컴퓨터들을 하나로 묶어 고도의 연산처리 작업을 사용하는 기술
- 가상화 : 하드웨어 리소스를 논리적으로 다룰 수 있게 하는 기술

- 컨테이너 : 하나의 OS 환경에서 애플리케이션을 실행하기 위한 영역을 여러개로 나눠 사용하는 기술
	→ 애플리케이션 실행 환경 가상화
	→ Docker

- 분산 처리 기술 : 데이터를 여러 서버로 나눠 처리하는 기술
	→ Hadoop 

- 데이터베이스 기술 : 대량 데이터 처리, 트랜잭션 처리 등 제공하는 기술
	→ RDB, NoSQL

- 스토리지 기술 : 데이터와 프로그램을 기록하는 기술


> 클라우드 서비스 모델
- IaaS (Infrastructure as a Service) : 인프라 서비스 제공하는 클라우드 서비스 모델
→ 가상 서버, 온라인 스토리지
→ AWS EC2

- PaaS (Platform as a Service) : 프로그램 및 애플리케이션 개발 툴, 프레임 워크 등 개발환경 제공하는 클라우드 서비스 모델
→ API, MS 애저

- SaaS (Software as a Service) : 소프트웨어를 네트워크를 통해 이용할 수 있게 제공하는 클라우드 서비스 모델
→ 슬랙, 구글 워크스페이스, 넷플릭스


> 클라우드 이용 모델
- 퍼블릭 클라우드 Public Cloud : 일반적으로 클라우드 서비스 제공자가 기업에 서비스를 제공하는 것

- 프라이빗 클라우드 Private Cloud : 클라우드 서비스 제공자가 기업에 직접 전용 데이터 센터 환경을 구축해주는 서비스

- 커뮤니티 클라우드 Community  Cloud : 비슷한 목적을 가진 기업들끼리 클라우드 시스템 형성하는 것

- 하이브리드 클라우드 Hybride Cloud : 위의 시스템과 온프레미스 시스템 등 연계해 활용하는 클라우드 형태


- 가상화 기술
가상화 머신 VM : 소프트웨어로 구현한 하드웨어

도커 Docker : The future of Linux Containers / 컨테이너 기반의 오픈소스 가상화 플랫폼

컨테이너 : 다양한 프로그램, 다양한 실행환경을 추상화
	→ 애플리케이션 배포 / 관리 단순화

이미지 : 컨테이너 실행에 필요한 모든 파일, 설정값등을 포함하고 있는 것 (변하지 않는 값)
→ 이미지는 작동되는 상태를 보장해줌
→ 여러개의 읽기 전용 레이어로 구성 

Dockerfile 도커파일 : 이미지를 만들기 위한 명세서
→ 기본 환경에서 애플리케이션 실행 환경까지의 최단 경로 
→ 이미지를 pull 받으면 레이어들이 독립적으로 층마다 저장됨

쿠버네티스 
→ 컨테이너 관리 도구 
→ AWS ECS와 같은 서비스

컨테이너 모니터링 및 관리
롤링업데이트 : 서버 중단 없이 차례로 업데이트


