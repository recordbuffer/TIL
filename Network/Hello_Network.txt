> 네트워크 Network : 컴퓨터와 컴퓨터 사이를 연결한 것

네트워크 구조 (=토폴로지 Topology)
: 네트워크 요소들의 연결구조

- 망사형 : 모든 컴퓨터 장치 연결 
	→ 응답 시간 빠름	→ 통신회선 고장이 전체에 영향 없음 (=다른 회선으로 전송 가능)
	→ 공중 데이터 통신망에 이용 (대규모 네트워크에 유리)
	→ 구축 비용 큼

- 스타형 : 모든 컴퓨터 장치가 중앙 허브에 1:1로 연결
	→ 유지보수 확장 용이
	→ 중앙 허브의 안정성, 신뢰성 확보 필요

- 트리형 (계층형) : 계층적으로 연결 
	→ 분산 처리 시스템 구성 방식

- 링형 (루프형) : 인접한 컴퓨터 장치끼리 연결
	→ 하나 고장나면 통신 전체 불가
	
- 버스형 : 하나의 통신 회선에 여러대의 컴퓨터 장치 연결 
	→ 구조 간단, 설치 쉬움


네트워크 분류 
- 근거리 통신망 LAN (Local Area Network) : 지리적으로 제한된 건물 범위 / 주로 버스형, 링형, 스타형
- 도시 통신망 MAN ((Metropolitan Area Network) : 건물, 도시 범위 / 여러 LAN을 라우터로 상호 연결해 만듦
- 광역 통신망 WAN (Wide Area Network : 지역-지역, 국가-국가 연결


프로토콜 Protocal : 통신을 위해 정해놓은 절차
IP 주소 : 네트워크 통신을 위한 고유주소
포트 Port : 컴퓨터 내 프로세스로 가는 주소 (프로그램 식별 / 서버 구분)

→ 어떤 방식(프로토콜)로 어디에 있는 컴퓨터(IP주소)에 어떤 프로그램(port)을 연결할 것인가?


도메인 Domain : 사람들이 쉽게 네트워크를 식별할 수 있게 한것 (네트워크 영문 주소)
URL : 특정 웹 서버의 특정 파일에 접근하기 위한 경로 
소켓 Socket : 네트워크 상 데이터를 입출력하기 위한 장치 / 프로세스 간 통신에 사용


> HTTP : 서버와 클라이언트가 인터넷상에서 데이터를 주고 받기  위한 무상태 프로토콜 방식

+ 무상태 프로토콜 (Stateless Protocal) : 서버와 클라이언트가 요청-응답 후 연결이 끊겨 이전의 클라이언트의 정보를 모르게 되는 프로토콜 방식

→ 데이터 요청-응답 독립적인 관리 == 서버와 클라이언트의 최대 연결 수보다 많은 요청과 응답 처리할 수 있음 
→ 불특정 다수 대상 서비스 적합함


HTTP 작동방식
① 클라이언트 -- 연결 -- 서버
② 클라이언트 --> 요청 --> 서버
③ 클라이언트 <-- 응답 <-- 서버
④ 클라이언트 -- 연결 해제 -- 서버 


HTTP 요청 메시지
- HTTP 요처 메서드
	- Get 방식 : 이미 존재하는 데이터 요청 / URI에 데이터 붙여 전송
	- POST 방식 : 새로운 데이터 생성 요청 / 요처 바디에 붙여 전송
	- PUT 방식 : 이미 존재하는 데이터 변경 요청
	- DELETE 방식 : 이미 존재하는 데이터 삭제 요청
- URL
- HTTP 버전


HTTP 응답 메시지 
- HTTP 버전
- HTTP 응답 코드
	- 200 : GET 요청 성공
	- 400 : Bad Request 일반 오류 코드
	- 404 : Not Found 요청 내용이 서버에 존재하지 않음
	- 500 : Internal Server Error 서버 오류
- 상태 메시지
- 날짜
- 웹 서버 이름
- 콘텐츠 타입, 길이